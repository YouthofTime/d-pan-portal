{"remainingRequest":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\node_modules\\babel-loader\\lib\\index.js!E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\src\\utils\\simple-http.js","dependencies":[{"path":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\src\\utils\\simple-http.js","mtime":1710063488638},{"path":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIENyZWF0ZWQgYnkgcnViaW4gb24gMjAyMC82LzQuCiAqLwondXNlIHN0cmljdCc7CgppbXBvcnQgX01lc3NhZ2UyIGZyb20gImVsZW1lbnQtdWkvbGliL3RoZW1lLWNoYWxrL21lc3NhZ2UuY3NzIjsKaW1wb3J0ICJlbGVtZW50LXVpL2xpYi90aGVtZS1jaGFsay9iYXNlLmNzcyI7CmltcG9ydCBfTWVzc2FnZSBmcm9tICJlbGVtZW50LXVpL2xpYi9tZXNzYWdlIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IHsgZ2V0VG9rZW4sIGdldFNoYXJlVG9rZW4gfSBmcm9tICcuL2Nvb2tpZSc7CmltcG9ydCBwYW5VdGlsIGZyb20gJy4vY29tbW9uJzsKdmFyIHNpbXBsZUh0dHAgPSBheGlvcy5jcmVhdGUoewogIGJhc2VVUkw6IHBhblV0aWwuZ2V0VXJsUHJlZml4KCksCiAgdGltZW91dDogMTAwMCAqIDMwLAogIGhlYWRlcnM6IHsKICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04JwogIH0KfSk7CnNpbXBsZUh0dHAuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGZ1bmN0aW9uIChjb25maWcpIHsKICBpZiAoY29uZmlnLmRhdGEpIHsKICAgIGNvbmZpZy5kYXRhID0gSlNPTi5zdHJpbmdpZnkoY29uZmlnLmRhdGEpOwogIH0KCiAgdmFyIHRva2VuID0gZ2V0VG9rZW4oKSwKICAgICAgc2hhcmVUb2tlbiA9IGdldFNoYXJlVG9rZW4oKTsKCiAgaWYgKHRva2VuKSB7CiAgICBjb25maWcuaGVhZGVyc1snQXV0aG9yaXphdGlvbiddID0gdG9rZW47CiAgfQoKICBpZiAoc2hhcmVUb2tlbikgewogICAgY29uZmlnLmhlYWRlcnNbJ1NoYXJlLVRva2VuJ10gPSBzaGFyZVRva2VuOwogIH0KCiAgcmV0dXJuIGNvbmZpZzsKfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgX01lc3NhZ2UuZXJyb3IoJ+ivt+axguWksei0pScpOwoKICByZXR1cm47Cn0pOwpzaW1wbGVIdHRwLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoZnVuY3Rpb24gKHJlcykgewogIHJldHVybiByZXMuZGF0YTsKfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgX01lc3NhZ2UuZXJyb3IoJ+ivt+axguWksei0pScpOwoKICByZXR1cm47Cn0pOwpleHBvcnQgZGVmYXVsdCBzaW1wbGVIdHRwOw=="},{"version":3,"sources":["E:/software/download/r-pan-scaffolding-master/r-pan-scaffolding-master/r-pan-portal/src/utils/simple-http.js"],"names":["axios","getToken","getShareToken","panUtil","simpleHttp","create","baseURL","getUrlPrefix","timeout","headers","interceptors","request","use","config","data","JSON","stringify","token","shareToken","error","response","res"],"mappings":"AAAA;;;AAIA;;;;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,UAAxC;AAEA,OAAOC,OAAP,MAAoB,UAApB;AAEA,IAAMC,UAAU,GAAGJ,KAAK,CAACK,MAAN,CAAa;AACxBC,EAAAA,OAAO,EAAEH,OAAO,CAACI,YAAR,EADe;AAExBC,EAAAA,OAAO,EAAE,OAAO,EAFQ;AAGxBC,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AAHe,CAAb,CAAnB;AAQAL,UAAU,CAACM,YAAX,CAAwBC,OAAxB,CAAgCC,GAAhC,CAAoC,UAAAC,MAAM,EAAI;AAC1C,MAAIA,MAAM,CAACC,IAAX,EAAiB;AACbD,IAAAA,MAAM,CAACC,IAAP,GAAcC,IAAI,CAACC,SAAL,CAAeH,MAAM,CAACC,IAAtB,CAAd;AACH;;AACD,MAAIG,KAAK,GAAGhB,QAAQ,EAApB;AAAA,MACIiB,UAAU,GAAGhB,aAAa,EAD9B;;AAEA,MAAIe,KAAJ,EAAW;AACPJ,IAAAA,MAAM,CAACJ,OAAP,CAAe,eAAf,IAAkCQ,KAAlC;AACH;;AACD,MAAIC,UAAJ,EAAgB;AACZL,IAAAA,MAAM,CAACJ,OAAP,CAAe,aAAf,IAAgCS,UAAhC;AACH;;AACD,SAAOL,MAAP;AACH,CAbD,EAaG,UAAAM,KAAK,EAAI;AACR,WAAQA,KAAR,CAAc,MAAd;;AACA;AACH,CAhBD;AAkBAf,UAAU,CAACM,YAAX,CAAwBU,QAAxB,CAAiCR,GAAjC,CAAqC,UAAAS,GAAG,EAAI;AACxC,SAAOA,GAAG,CAACP,IAAX;AACH,CAFD,EAEG,UAAAK,KAAK,EAAI;AACR,WAAQA,KAAR,CAAc,MAAd;;AACA;AACH,CALD;AAOA,eAAef,UAAf","sourcesContent":["/**\n * Created by rubin on 2020/6/4.\n */\n\n'use strict'\n\nimport axios from 'axios'\nimport { getToken, getShareToken } from './cookie'\nimport { Message } from 'element-ui'\nimport panUtil from './common'\n\nconst simpleHttp = axios.create({\n        baseURL: panUtil.getUrlPrefix(),\n        timeout: 1000 * 30,\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8'\n        }\n    })\n\nsimpleHttp.interceptors.request.use(config => {\n    if (config.data) {\n        config.data = JSON.stringify(config.data)\n    }\n    let token = getToken(),\n        shareToken = getShareToken()\n    if (token) {\n        config.headers['Authorization'] = token\n    }\n    if (shareToken) {\n        config.headers['Share-Token'] = shareToken\n    }\n    return config\n}, error => {\n    Message.error('请求失败')\n    return\n})\n\nsimpleHttp.interceptors.response.use(res => {\n    return res.data\n}, error => {\n    Message.error('请求失败')\n    return\n})\n\nexport default simpleHttp\n"]}]}