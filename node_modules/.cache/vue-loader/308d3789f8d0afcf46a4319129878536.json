{"remainingRequest":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\src\\components\\buttons\\download-button\\index.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\src\\components\\buttons\\download-button\\index.vue","mtime":1710063487650},{"path":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZG93bmxvYWQtYnV0dG9uLWNvbnRlbnQgewogICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICAgbWFyZ2luLXJpZ2h0OiAxMHB4Owp9Cgo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4FA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/buttons/download-button","sourcesContent":["<template>\n    <div class=\"download-button-content\">\n        <el-button v-if=\"roundFlag\" type=\"info\" :size=\"size\" round @click=\"downloadFile\" :loading=\"loading\">\n            下载<i class=\"el-icon-download el-icon--right\"/>\n        </el-button>\n        <el-button v-if=\"circleFlag\" type=\"info\" :size=\"size\" circle @click=\"downloadFile\" :loading=\"loading\">\n            <i class=\"el-icon-download\"/>\n        </el-button>\n    </div>\n</template>\n\n<script>\n\n    import panUtil from '../../../utils/common'\n    import { getToken } from '../../../utils/cookie'\n    import { mapGetters } from 'vuex'\n\n    export default {\n        name: 'DownLoadButton',\n        components: {},\n        props: {\n            roundFlag: Boolean,\n            circleFlag: Boolean,\n            size: String,\n            item: Object\n        },\n        data() {\n            return {\n                loading: false\n            }\n        },\n        methods: {\n            downloadFile() {\n                let _this = this\n                if (!_this.item && (!_this.multipleSelection || _this.multipleSelection.length === 0)) {\n                    _this.$message.error('请选择要下载的文件')\n                    return\n                }\n                if (!_this.item) {\n                    for (let i = 0, iLength = _this.multipleSelection.length; i < iLength; i++) {\n                        if (_this.multipleSelection[i].folderFlag === 1) {\n                            _this.$message.error('文件夹暂不支持下载')\n                            return\n                        }\n                    }\n                    _this.doDownLoads(_this.multipleSelection)\n                }\n                if (_this.item) {\n                    if (_this.item.folderFlag === 1) {\n                        _this.$message.error('文件夹暂不支持下载')\n                        return\n                    }\n                    _this.doDownload(_this.item)\n                }\n            },\n            doDownload(item) {\n                let url = panUtil.getUrlPrefix() + '/file/download?fileId=' + item.fileId + '&authorization=' + getToken(),\n                    filename = item.filename,\n                    link = document.createElement('a')\n                link.style.display = 'none'\n                link.href = url\n                link.setAttribute('download', filename)\n                document.body.appendChild(link)\n                link.click()\n                document.body.removeChild(link)\n            },\n            doDownLoads(items, i) {\n                let _this = this\n                if (!i) {\n                    i = 0\n                }\n                if (items.length === i) {\n                    return\n                }\n                setTimeout(function () {\n                    _this.doDownload(items[i]);\n                    i++\n                    _this.doDownLoads(items, i)\n                }, 500);\n            }\n        },\n        computed: {\n            ...mapGetters(['multipleSelection'])\n        },\n        mounted() {\n        },\n        watch: {}\n    }\n</script>\n\n<style>\n\n    .download-button-content {\n        display: inline-block;\n        margin-right: 10px;\n    }\n\n</style>"]}]}