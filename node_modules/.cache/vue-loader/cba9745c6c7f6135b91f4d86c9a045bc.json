{"remainingRequest":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\src\\components\\file-table\\index.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\src\\components\\file-table\\index.vue","mtime":1710063487870},{"path":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5wYW4tbWFpbi1maWxlLWxpc3QtY29udGVudCB7CiAgICB3aWR0aDogMTAwJTsKICAgIGhlaWdodDogMTAwJTsKICAgIG1hcmdpbi10b3A6IDIwcHg7Cn0KCi5maWxlLW9wZXJhdGlvbi1jb250ZW50IHsKICAgIGRpc3BsYXk6IG5vbmU7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICByaWdodDogMTAwcHg7CiAgICB0b3A6IDhweDsKfQoKLmVsLWltYWdlLXZpZXdlciB7CiAgICB3aWR0aDogODAlOwogICAgaGVpZ2h0OiA4MCU7CiAgICBtYXJnaW4tbGVmdDogMTAlOwogICAgbWFyZ2luLXRvcDogNCUKfQoK"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0PA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/file-table","sourcesContent":["<template>\n    <div class=\"pan-main-file-list-content\">\n        <el-table\n                v-loading=\"tableLoading\"\n                ref=\"fileTable\"\n                :data=\"fileList\"\n                :height=\"tableHeight\"\n                tooltip-effect=\"dark\"\n                style=\"width: 100%\"\n                @selection-change=\"handleSelectionChange\"\n                @cell-mouse-enter=\"showOperation\"\n                @cell-mouse-leave=\"hiddenOperation\"\n        >\n            <el-table-column\n                    type=\"selection\"\n                    width=\"55\">\n            </el-table-column>\n            <el-table-column\n                    label=\"文件名\"\n                    prop=\"filename\"\n                    sortable\n                    show-overflow-tooltip\n                    min-width=\"750\">\n                <template slot-scope=\"scope\">\n                    <div @click=\"clickFilename(scope.row)\" class=\"file-name-content\">\n                        <i :class=\"getFileFontElement(scope.row.fileType)\"\n                           style=\"margin-right: 15px; font-size: 20px; cursor: pointer;\"/>\n                        <span style=\"cursor:pointer;\">{{ scope.row.filename }}</span>\n                    </div>\n                    <div class=\"file-operation-content\">\n                        <el-tooltip class=\"item\" effect=\"light\" content=\"下载\" placement=\"top\">\n                            <download-button size=\"small\" :circle-flag=true :item=\"scope.row\" />\n                        </el-tooltip>\n                        <el-tooltip class=\"item\" effect=\"light\" content=\"重命名\" placement=\"top\">\n                            <rename-button size=\"small\" :circle-flag=true :item=\"scope.row\" />\n                        </el-tooltip>\n                        <el-tooltip class=\"item\" effect=\"light\" content=\"删除\" placement=\"top\">\n                            <delete-button size=\"small\" :circle-flag=true :item=\"scope.row\" />\n                        </el-tooltip>\n                        <el-tooltip class=\"item\" effect=\"light\" content=\"分享\" placement=\"top\">\n                            <share-button size=\"small\" :circle-flag=true :item=\"scope.row\" />\n                        </el-tooltip>\n                        <el-tooltip class=\"item\" effect=\"light\" content=\"复制到\" placement=\"top\">\n                            <copy-button size=\"small\" :circle-flag=true :item=\"scope.row\" />\n                        </el-tooltip>\n                        <el-tooltip class=\"item\" effect=\"light\" content=\"移动到\" placement=\"top\">\n                            <transfer-button size=\"small\" :circle-flag=true :item=\"scope.row\" />\n                        </el-tooltip>\n                    </div>\n                </template>\n            </el-table-column>\n            <el-table-column\n                    v-if=\"searchFlag\"\n                    prop=\"parentFilename\"\n                    label=\"位置\"\n                    min-width=\"120\"\n                    align=\"center\">\n                <template slot-scope=\"scope\">\n                    <el-link @click=\"goInFolder(scope.row.parentId)\" type=\"primary\">{{ scope.row.parentFilename }}</el-link>\n                </template>\n            </el-table-column>\n            <el-table-column\n                    prop=\"fileSizeDesc\"\n                    sortable\n                    label=\"大小\"\n                    min-width=\"120\"\n                    align=\"center\">\n            </el-table-column>\n            <el-table-column\n                    prop=\"updateTime\"\n                    sortable\n                    align=\"center\"\n                    label=\"修改日期\"\n                    min-width=\"240\">\n            </el-table-column>\n        </el-table>\n\n        <el-image-viewer\n                class=\"el-image-viewer\"\n                :initial-index=\"imgIndex\"\n                v-if=\"showViewer\"\n                :on-close=\"closeShowViewer\"\n                :url-list=\"imgUrl\"/>\n    </div>\n</template>\n\n<script>\n\n    import DownloadButton from '../buttons/download-button'\n    import DeleteButton from '../buttons/delete-button'\n    import RenameButton from '../buttons/rename-button'\n    import CopyButton from '../buttons/copy-button'\n    import TransferButton from '../buttons/transfer-button'\n    import ShareButton from '../buttons/share-button'\n    import fileService from '../../api/file'\n    import panUtil from '../../utils/common'\n    import ElImageViewer from 'element-ui/packages/image/src/image-viewer'\n    import { mapMutations, mapActions, mapGetters } from 'vuex'\n\n    export default {\n        name: 'FileTable',\n        components: {\n            DownloadButton,\n            DeleteButton,\n            RenameButton,\n            CopyButton,\n            TransferButton,\n            ShareButton,\n            ElImageViewer\n        },\n        props: {\n        },\n        data() {\n            return {\n                tableHeight: window.innerHeight - 200,\n                showViewer: false,\n                imgUrl: [],\n                imgIndex: 0\n            }\n        },\n        methods: {\n            ...mapMutations({\n                reloadSelection: 'file/setMultipleSelection',\n                resetParentId: 'file/setFileParentId',\n                clearBreadCrumbs: 'breadcrumb/clear',\n                resetBreadCrumbs: 'breadcrumb/reset',\n                setSearchFlag: 'file/setSearchFlag'\n            }),\n            ...mapActions({\n                reloadFileList: 'file/loadFileList'\n            }),\n            handleSelectionChange(multipleSelection) {\n                this.reloadSelection(multipleSelection)\n            },\n            showOperation(row, column, cell, event) {\n                panUtil.showOperation(cell)\n            },\n            hiddenOperation(row, column, cell, event) {\n                panUtil.hiddenOperation(cell)\n            },\n            clickFilename(row) {\n                let _this = this\n                switch (row.fileType) {\n                    case 0:\n                        _this.goInFolder(row.fileId)\n                        break\n                    case 3:\n                    case 4:\n                    case 10:\n                        _this.showOffice(row)\n                        break\n                    case 5:\n                    case 6:\n                        _this.showIframe(row)\n                        break\n                    case 7:\n                        _this.showImg(row)\n                        break\n                    case 8:\n                        _this.showMusic(row)\n                        break\n                    case 9:\n                        _this.showVideo(row)\n                        break\n                    case 11:\n                        _this.showCode(row)\n                    default:\n                        break\n                }\n            },\n            goInFolder(fileId) {\n                let _this = this\n                fileService.getBreadcrumbs({\n                    fileId: fileId\n                }, res => {\n                    _this.setSearchFlag(false)\n                    _this.clearBreadCrumbs()\n                    _this.resetBreadCrumbs(res.data)\n                    _this.resetParentId(fileId)\n                    _this.reloadFileList()\n                }, res => {\n                    _this.$message.error(res.message)\n                })\n            },\n            showOffice(row) {\n                this.openNewPage('/preview/office', 'PreviewOffice', {\n                    fileId: row.fileId\n                })\n            },\n            showIframe(row) {\n                this.openNewPage('/preview/iframe', 'PreviewIframe', {\n                    fileId: row.fileId\n                })\n            },\n            showImg(row) {\n                this.imgUrl = new Array()\n                for (let i = 0, iLength = this.fileList.length; i < iLength; ++i) {\n                    if (this.fileList[i].fileType === 7) {\n                        this.imgUrl.push(panUtil.getPreviewUrl(this.fileList[i].fileId))\n                        if (this.fileList[i].fileId === row.fileId) {\n                            this.imgIndex = i\n                        }\n                    }\n                }\n                this.showViewer = true\n            },\n            showMusic(row) {\n                this.openNewPage('/preview/music', 'PreviewMusic', {\n                    fileId: row.fileId,\n                    parentId: row.parentId\n                })\n            },\n            showVideo(row) {\n                this.openNewPage('/preview/video', 'PreviewVideo', {\n                    fileId: row.fileId,\n                    parentId: row.parentId\n                })\n            },\n            showCode(row) {\n                this.openNewPage('/preview/code', 'PreviewCode', {\n                    fileId: row.fileId\n                })\n            },\n            openNewPage(path, name, params) {\n                const { href } = this.$router.resolve({\n                    path: path,\n                    name: name,\n                    params: params\n                })\n                window.open(href, '_blank')\n            },\n            getFileFontElement(type) {\n                return panUtil.getFileFontElement(type)\n            },\n            closeShowViewer() {\n                this.showViewer = false\n            }\n        },\n        computed: {\n            ...mapGetters(['parentId', 'fileTypes', 'fileList', 'searchFlag', 'tableLoading'])\n        },\n        mounted() {\n            this.reloadSelection(new Array())\n        },\n        watch: {}\n    }\n</script>\n\n<style>\n\n    .pan-main-file-list-content {\n        width: 100%;\n        height: 100%;\n        margin-top: 20px;\n    }\n\n    .file-operation-content {\n        display: none;\n        position: absolute;\n        right: 100px;\n        top: 8px;\n    }\n\n    .el-image-viewer {\n        width: 80%;\n        height: 80%;\n        margin-left: 10%;\n        margin-top: 4%\n    }\n\n</style>"]}]}