{"remainingRequest":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\src\\components\\file-button-group\\index.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\src\\components\\file-button-group\\index.vue","mtime":1710063487829},{"path":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoucGFuLW1haW4tb3BlcmF0aW5nLWNvbnRlbnQgewogICAgd2lkdGg6IDEwMCU7CiAgICBwYWRkaW5nOiAyMHB4IDAgMCAxM3B4OwogICAgaGVpZ2h0OiA2MHB4Owp9CgoucGFuLW1haW4tb3BlcmF0aW5nLWNvbnRlbnQgLnBhbi1tYWluLWJ1dHRvbi1jb250ZW50IHsKICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKfQoK"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/file-button-group","sourcesContent":["<template>\n    <div class=\"pan-main-operating-content\">\n        <div class=\"pan-main-button-content\">\n            <upload-button v-if=\"uploadButtonFlag\" size=\"medium\" :round-flag=true />\n            <create-folder-button v-if=\"createFolderButtonFlag\" size=\"medium\" :round-flag=true />\n            <download-button v-if=\"downloadButtonFlag\" size=\"medium\" :round-flag=true />\n            <delete-button v-if=\"deleteButtonFlag\" size=\"medium\" :round-flag=true />\n            <rename-button v-if=\"renameButtonFlag\" size=\"medium\" :round-flag=true />\n            <share-button v-if=\"shareButtonFlag\" size=\"medium\" :round-flag=true />\n            <copy-button v-if=\"copyButtonFlag\" size=\"medium\" :round-flag=true />\n            <transfer-button v-if=\"transferButtonFlag\" size=\"medium\" :round-flag=true />\n        </div>\n\n    </div>\n</template>\n\n<script>\n\n    import UploadButton from '../buttons/upload-button'\n    import CreateFolderButton from '../buttons/create-folder-button'\n    import DownloadButton from '../buttons/download-button'\n    import DeleteButton from '../buttons/delete-button'\n    import RenameButton from '../buttons/rename-button'\n    import ShareButton from '../buttons/share-button'\n    import CopyButton from '../buttons/copy-button'\n    import TransferButton from '../buttons/transfer-button'\n\n    export default {\n        name: 'FileButtonGroup',\n        components: {\n            UploadButton,\n            CreateFolderButton,\n            DownloadButton,\n            DeleteButton,\n            RenameButton,\n            ShareButton,\n            CopyButton,\n            TransferButton\n        },\n        props: {\n            buttonArray: Array\n        },\n        data() {\n            return {\n                uploadButtonFlag: false,\n                createFolderButtonFlag: false,\n                downloadButtonFlag: false,\n                deleteButtonFlag: false,\n                renameButtonFlag: false,\n                shareButtonFlag: false,\n                copyButtonFlag: false,\n                transferButtonFlag: false\n            }\n        },\n        methods: {\n            initButton() {\n                let _this = this\n                if (_this.buttonArray) {\n                    _this.buttonArray.forEach(item => {\n                        switch (item) {\n                            case 'upload':\n                                _this.uploadButtonFlag = true\n                                break\n                            case 'createFolder':\n                                _this.createFolderButtonFlag = true\n                                break\n                            case 'download':\n                                _this.downloadButtonFlag = true\n                                break\n                            case 'delete':\n                                _this.deleteButtonFlag = true\n                                break\n                            case 'rename':\n                                _this.renameButtonFlag = true\n                                break\n                            case 'share':\n                                _this.shareButtonFlag = true\n                                break\n                            case 'copy':\n                                _this.copyButtonFlag = true\n                                break\n                            case 'transfer':\n                                _this.transferButtonFlag = true\n                                break\n                            default:\n                                break\n                        }\n                    })\n                }\n            }\n        },\n        computed: {},\n        mounted() {\n            this.initButton()\n        },\n        watch: {}\n    }\n</script>\n\n<style>\n\n    .pan-main-operating-content {\n        width: 100%;\n        padding: 20px 0 0 13px;\n        height: 60px;\n    }\n\n    .pan-main-operating-content .pan-main-button-content {\n        display: inline-block;\n    }\n\n</style>"]}]}