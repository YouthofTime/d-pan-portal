{"remainingRequest":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\src\\views\\preview\\code\\index.vue?vue&type=style&index=0&id=2cd8f6f1&scoped=true&lang=css&","dependencies":[{"path":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\src\\views\\preview\\code\\index.vue","mtime":1710063489048},{"path":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\software\\download\\r-pan-scaffolding-master\\r-pan-scaffolding-master\\r-pan-portal\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jb2RlLXRleHQtY29udGVudCB7CiAgICB3aWR0aDogMTAwJTsKICAgIG1hcmdpbi10b3A6IDYycHg7CiAgICBkaXNwbGF5OiBibG9jazsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKfQoKLmxheXVpLWNvZGUuY29kZS10ZXh0IHsKICAgIHdpZHRoOiA2MCU7CiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICB0ZXh0LWFsaWduOiBsZWZ0OwogICAgb3ZlcmZsb3c6IGF1dG87Cn0KCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/preview/code","sourcesContent":["<template>\n    <div>\n        <pan-simple-header/>\n        <div class=\"code-text-content\">\n            <pre class=\"layui-code code-text\">\n                {{codeContent}}\n            </pre>\n        </div>\n    </div>\n</template>\n\n<script>\n\n    import PanSimpleHeader from '../../../components/simple-header'\n    import fileService from '../../../api/file'\n    import axios from 'axios'\n    import panUtil from '../../../utils/common'\n\n    export default {\n        name: \"Code\",\n        components: { PanSimpleHeader },\n        data() {\n            return {\n                codeContent: ''\n            }\n        },\n        methods: {\n            init() {\n                let fileId = this.$route.params.fileId,\n                    _this = this\n                fileService.detail({fileId: fileId}, function (res) {\n                    if (res.status === 0) {\n                        _this.renderCode(res.data.fileId, res.data.filename)\n                    } else {\n                        _this.codeContent = '获取资源失败'\n                    }\n                }, function (err) {\n                    _this.codeContent = '获取资源失败'\n                })\n            },\n            renderCode(fileId, filename) {\n                let _this = this\n                axios.get(panUtil.getPreviewUrl(fileId)).then(res => {\n                    if (res.status === 200) {\n                        _this.codeContent = res.data\n                        layui.use('code', function () {\n                            layui.code({\n                                elem: '.layui-code.code-text',\n                                title: filename,\n                                encode: false,\n                                about: false\n                            })\n                        })\n                    } else {\n                        _this.codeContent = '获取资源失败'\n                    }\n                }).catch(err => {\n                    _this.codeContent = '获取资源失败'\n                })\n            }\n        },\n        computed: {},\n        mounted() {\n            this.init()\n        }\n    }\n</script>\n\n<style scoped>\n\n    .code-text-content {\n        width: 100%;\n        margin-top: 62px;\n        display: block;\n        text-align: center;\n    }\n\n    .layui-code.code-text {\n        width: 60%;\n        display: inline-block;\n        text-align: left;\n        overflow: auto;\n    }\n\n</style>\n"]}]}